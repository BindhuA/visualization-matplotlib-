# -*- coding: utf-8 -*-
"""matplot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t9ETLDyR9F2BG8rUlH8YOszK230TJhno
"""

import matplotlib.pyplot as plt
import numpy as np

### to draw a line from position (0,10) to (5,150)
xpoints=np.array([0,5])
ypoints=np.array([10,150])
plt.plot(xpoints,ypoints)
plt.show()

xpoints=np.array([0,5])
ypoints=np.array([10,150])
plt.plot(xpoints,ypoints,"*")
plt.show()

xpoints=np.array([0,5])
ypoints=np.array([10,150])
plt.plot(xpoints,ypoints,"X")
plt.show()

###giving only y values & by default x values starts with 0,1,2,3... & r=read color,k=black 
ypoints=([3,8,1,10])
plt.plot(ypoints,"*""r")
plt.show()

#ms=marker size
xpoints=np.array([5,6,7,12])
ypoints=np.array([3,8,1,12])
plt.plot(xpoints,ypoints,marker="*",ms=50,color="k")
plt.show()

###mec=marker edge color
xpoints=np.array([5,6,7,12])
ypoints=np.array([3,8,1,12])
plt.plot(xpoints,ypoints,marker="*",ms=50,mec="g",color="pink")
plt.show()

###mfc=marker fill/face color
ypoints=np.array([3,8,1,12])
plt.plot(ypoints,marker="*",ms=50,mfc="r",color="k")
plt.show()

###USe both mec,mfc arguments to color the entire marker
ypoints=np.array([3,8,1,12])
plt.plot(ypoints,marker="o",ms=50,mec="k",mfc="pink",color="r")
plt.show()

ypoints=np.array([3,8,1,12])
plt.plot(ypoints,marker="*",ms=200,mfc="r",mec="k")
plt.show()

ypoints=np.array([3,8,1,12])
plt.plot(ypoints,marker="o",linestyle="dashed",ms=20,mfc="blue",mec="hotpink",linewidth=5)
plt.show()

ypoints=np.array([3,8,1,12])
plt.plot(ypoints,marker="o",linestyle="dotted",ms=20,mfc="green",mec="r",linewidth=5)
plt.show()

xpoints=np.array([10,20,30])
ypoints=np.array([1,2,6])
plt.plot(xpoints,ypoints,marker="*",color="g",mfc="b",mec="r",ms=50,linestyle="dotted")
plt.show()

#default 1st priority color is blue 2nd=Orange
y1=xpoints=np.array([10,22,34,46,54])
y2=ypoints=np.array([1,2,6,10,12])
plt.plot(y1)
plt.plot(y2)
plt.show()

y1=xpoints=np.array([3,8,1,10])
y2=ypoints=np.array([6,2,5,11,10,12])
plt.plot(y1,color="k")
plt.plot(y2)
plt.show()

y1=xpoints=np.array([3,8,1,10])
y2=ypoints=np.array([6,2,5,11,10,12])
plt.plot(y1,marker="*",color="k")
plt.plot(y2,marker="*",color="g")
plt.show()

x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])

plt.plot(x, y,color="r",linewidth=1)

plt.xlabel("Average Pulse",fontsize=10,color="r")
plt.ylabel("Calorie Burner",fontsize=10,color="r")
plt.title("Sample",fontsize=20,color="blue")
plt.show()



x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])
plt.xlabel("Average Pulse",fontsize=10,loc="right")
plt.ylabel("Calorie Burner",fontsize=10,loc="top")
plt.title("Sample",fontsize=20,color="g",loc="right")
plt.plot(x,y)
plt.show()

x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])

plt.title("Sports watch data")
plt.xlabel("Average Pulse")
plt.ylabel("Calorie Burner")

plt.plot(x, y,color="r")

plt.grid(color="g",linestyle="dotted")

plt.show()

x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])

plt.title("Sports watch data")
plt.xlabel("Average Pulse")
plt.ylabel("Calorie Burner")

plt.plot(x, y)

plt.grid(axis="x")

plt.show()

x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])

plt.title("Sports watch data")
plt.xlabel("Average Pulse")
plt.ylabel("Calorie Burner")

plt.plot(x, y)

plt.grid(axis="y")

plt.show()

##set line properties to grid(color,linestyle,linewidth)
x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])

plt.title("Sports watch data")
plt.xlabel("Average Pulse")
plt.ylabel("Calorie Burner")

plt.plot(x, y)

plt.grid(color="hotpink",linestyle="--",linewidth=1.5)

plt.show()

###scatter plot-to find the relationship b/w 2 numerical attributes(correlation)
x=np.array([80,85,90,95,100,105,110,115,120,125])
y=np.array([240,250,260,270,280,290,300,310,320,330])

plt.scatter(x, y)
plt.show()

#day one,the age and speed of 13 cars:
x=np.array([5,7,8,7,2,17,2,9,4,13,12,9,6])
y=np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
plt.scatter(x,y)

#day two,the age and speed of 15 cars:
x=np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])
y=np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])
plt.scatter(x,y)

plt.show()

x=np.array([5,7,8,7,2,17,2,9,4,13,12,9,6])
y=np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
plt.scatter(x,y,color="hotpink")

#day two,the age and speed of 15 cars:
x=np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])
y=np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])
plt.scatter(x,y,color="g")

plt.show()

x=np.array(["A","B","C","D"])
y=np.array([3,8,1,10])
plt.bar(x,y,color="k")
plt.show()

x=np.array(["A","B","C","D"])
y=np.array([3,8,1,10])
plt.barh(x,y,color="g")
plt.show()

x=np.array(["A","B","C","D"])
y=np.array([3,8,1,10])
plt.bar(x,y,width=0.05)
plt.show()

x=np.array(["A","B","C","D"])
y=np.array([3,8,1,10])
plt.barh(x,y,height=0.05)
plt.show()

x=np.random.normal(15,5,1000)

plt.hist(x)

x=np.random.normal(100,5,2500)

plt.hist(x)
plt.show()

y=np.array([10,135,25,15,19])

plt.pie(y)
plt.show()

y=np.array([10,25,15,19])
my_labels=["cherries","Apples","Bananas","Date"]
plt.pie(y,labels=my_labels)
plt.show()

y=np.array([10,25,15,19])
my_labels=["cherries","Apples","Bananas","Date"]
plt.pie(y,labels=my_labels,startangle=90)
plt.show()

y=np.array([10,25,15,19])
my_labels=["cherries","Apples","Bananas","Date"]
plt.pie(y,labels=my_labels,startangle=180)
plt.show()

y=np.array([10,25,15,19])
my_labels=["cherries","Apples","Bananas","Date"]
my_explode=[0,0.95,0.8,0.2]
plt.pie(y,labels=my_labels,explode=my_explode)
plt.show()

y=np.array([10,25,15,19])
my_labels=["cherries","Apples","Bananas","Date"]
my_colors=["k","hotpink","b","yellow"]
plt.pie(y,labels=my_labels,colors=my_colors,startangle=180)
plt.show()

y=np.array([10,25,15,19])
my_labels=["cherries","Apples","Bananas","Date"]

plt.pie(y)
plt.legend(labels=my_labels)
plt.show()

